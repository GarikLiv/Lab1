import math
import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

def transCurrent(vBe,vT,iSat):
    return iSat*(np.exp(vBe/vT)-1)

k = 1.380649E-23
e = 1.60217663E-19

V22_6 = [0, 0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1, 0.105, 0.11, 0.115, 0.12, 0.125, 0.13, 0.135, 0.14, 0.145, 0.15, 0.155, 0.16, 0.165, 0.17, 0.175, 0.18, 0.185, 0.19, 0.195, 0.2, 0.205, 0.21, 0.215, 0.22, 0.225, 0.23, 0.235, 0.24, 0.245, 0.25, 0.255, 0.26, 0.265, 0.27, 0.275, 0.28, 0.285, 0.29, 0.295, 0.3, 0.305, 0.31, 0.315, 0.32, 0.325, 0.33, 0.335, 0.34, 0.345, 0.35, 0.355, 0.36, 0.365, 0.37, 0.375, 0.38, 0.385, 0.39, 0.395, 0.4, 0.405, 0.41, 0.415, 0.42, 0.425, 0.43, 0.435, 0.44, 0.445, 0.45, 0.455, 0.46, 0.465, 0.47]
V23_4 = [0, 0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1, 0.105, 0.11, 0.115, 0.12, 0.125, 0.13, 0.135, 0.14, 0.145, 0.15, 0.155, 0.16, 0.165, 0.17, 0.175, 0.18, 0.185, 0.19, 0.195, 0.2, 0.205, 0.21, 0.215, 0.22, 0.225, 0.23, 0.235, 0.24, 0.245, 0.25, 0.255, 0.26, 0.265, 0.27, 0.275, 0.28, 0.285, 0.29, 0.295, 0.3, 0.305, 0.31, 0.315, 0.32, 0.325, 0.33, 0.335, 0.34, 0.345, 0.35, 0.355, 0.36, 0.365, 0.37, 0.375, 0.38, 0.385, 0.39, 0.395, 0.4, 0.405, 0.41, 0.415, 0.42, 0.425, 0.43, 0.435, 0.44, 0.445, 0.45, 0.455, 0.46, 0.465, 0.47]
V26_4 = [0, 0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1, 0.105, 0.11, 0.115, 0.12, 0.125, 0.13, 0.135, 0.14, 0.145, 0.15, 0.155, 0.16, 0.165, 0.17, 0.175, 0.18, 0.185, 0.19, 0.195, 0.2, 0.205, 0.21, 0.215, 0.22, 0.225, 0.23, 0.235, 0.24, 0.245, 0.25, 0.255, 0.26, 0.265, 0.27, 0.275, 0.28, 0.285, 0.29, 0.295, 0.3, 0.305, 0.31, 0.315, 0.32, 0.325, 0.33, 0.335, 0.34, 0.345, 0.35, 0.355, 0.36, 0.365, 0.37, 0.375, 0.38, 0.385, 0.39, 0.395, 0.4, 0.405, 0.41, 0.415, 0.42, 0.425, 0.43, 0.435, 0.44, 0.445, 0.45, 0.455, 0.46, 0.465, 0.47]
V31_4 = [0, 0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1, 0.105, 0.11, 0.115, 0.12, 0.125, 0.13, 0.135, 0.14, 0.145, 0.15, 0.155, 0.16, 0.165, 0.17, 0.175, 0.18, 0.185, 0.19, 0.195, 0.2, 0.205, 0.21, 0.215, 0.22, 0.225, 0.23, 0.235, 0.24, 0.245, 0.25, 0.255, 0.26, 0.265, 0.27, 0.275, 0.28, 0.285, 0.29, 0.295, 0.3, 0.305, 0.31, 0.315, 0.32, 0.325, 0.33, 0.335, 0.34, 0.345, 0.35, 0.355, 0.36, 0.365, 0.37, 0.375, 0.38, 0.385, 0.39, 0.395, 0.4, 0.405, 0.41, 0.415, 0.42, 0.425, 0.43, 0.435, 0.44, 0.445, 0.45, 0.455, 0.46, 0.465, 0.47]
V38_3 = [0, 0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1, 0.105, 0.11, 0.115, 0.12, 0.125, 0.13, 0.135, 0.14, 0.145, 0.15, 0.155, 0.16, 0.165, 0.17, 0.175, 0.18, 0.185, 0.19, 0.195, 0.2, 0.205, 0.21, 0.215, 0.22, 0.225, 0.23, 0.235, 0.24, 0.245, 0.25, 0.255, 0.26, 0.265, 0.27, 0.275, 0.28, 0.285, 0.29, 0.295, 0.3, 0.305, 0.31, 0.315, 0.32, 0.325, 0.33, 0.335, 0.34, 0.345, 0.35, 0.355, 0.36, 0.365, 0.37, 0.375, 0.38, 0.385, 0.39, 0.395, 0.4, 0.405, 0.41, 0.415, 0.42, 0.425, 0.43, 0.435, 0.44, 0.445, 0.45, 0.455, 0.46, 0.465, 0.47]
V46_6 = [0, 0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1, 0.105, 0.11, 0.115, 0.12, 0.125, 0.13, 0.135, 0.14, 0.145, 0.15, 0.155, 0.16, 0.165, 0.17, 0.175, 0.18, 0.185, 0.19, 0.195, 0.2, 0.205, 0.21, 0.215, 0.22, 0.225, 0.23, 0.235, 0.24, 0.245, 0.25, 0.255, 0.26, 0.265, 0.27, 0.275, 0.28, 0.285, 0.29, 0.295, 0.3, 0.305, 0.31, 0.315, 0.32, 0.325, 0.33, 0.335, 0.34, 0.345, 0.35, 0.355, 0.36, 0.365, 0.37, 0.375, 0.38, 0.385, 0.39, 0.395, 0.4, 0.405, 0.41, 0.415, 0.42, 0.425, 0.43, 0.435, 0.44, 0.445, 0.45, 0.455, 0.46, 0.465, 0.47]
V54_3 = [0, 0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1, 0.105, 0.11, 0.115, 0.12, 0.125, 0.13, 0.135, 0.14, 0.145, 0.15, 0.155, 0.16, 0.165, 0.17, 0.175, 0.18, 0.185, 0.19, 0.195, 0.2, 0.205, 0.21, 0.215, 0.22, 0.225, 0.23, 0.235, 0.24, 0.245, 0.25, 0.255, 0.26, 0.265, 0.27, 0.275, 0.28, 0.285, 0.29, 0.295, 0.3, 0.305, 0.31, 0.315, 0.32, 0.325, 0.33, 0.335, 0.34, 0.345, 0.35, 0.355, 0.36, 0.365, 0.37, 0.375, 0.38, 0.385, 0.39, 0.395, 0.4, 0.405, 0.41, 0.415, 0.42, 0.425, 0.43, 0.435, 0.44, 0.445, 0.45, 0.455, 0.46, 0.465, 0.47]
V68_2 = [0, 0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1, 0.105, 0.11, 0.115, 0.12, 0.125, 0.13, 0.135, 0.14, 0.145, 0.15, 0.155, 0.16, 0.165, 0.17, 0.175, 0.18, 0.185, 0.19, 0.195, 0.2, 0.205, 0.21, 0.215, 0.22, 0.225, 0.23, 0.235, 0.24, 0.245, 0.25, 0.255, 0.26, 0.265, 0.27, 0.275, 0.28, 0.285, 0.29, 0.295, 0.3, 0.305, 0.31, 0.315, 0.32, 0.325, 0.33, 0.335, 0.34, 0.345, 0.35, 0.355, 0.36, 0.365, 0.37, 0.375, 0.38, 0.385, 0.39, 0.395, 0.4, 0.405, 0.41, 0.415, 0.42, 0.425, 0.43, 0.435, 0.44, 0.445, 0.45, 0.455, 0.46, 0.465, 0.47]
A22_6 = [62.628,-19.2893,-41.6605,-46.9243,31.3749,16.5704,29.072,-19.2893,18.8733,-25.2111,53.7461,21.5052,36.3097,-25.8691,16.5704,55.72,49.4692,-22.9082,-6.45878,33.3488,-0.208001,7.35873,30.7169,20.1893,22.4922,90.2638,71.8404,111.648,76.7753,205.081,153.759,182.709,106.713,208.042,352.467,393.92,453.467,554.137,651.189,777.849,953.858,1109.8,1501.62,1813.5,2020.77,2617.88,3174.86,3839.08,4675.37,5582.39,6819.72,8398.2,10149.7,12298,14971.1,18187.9,22336.1,27065,32841.4,39761.3,48285.1,59232.5,71887.3,87195.5,105716,128215,157304,190780,231117,280754,340386,418151,507058,615799,746368,905713,1.11E+06,1.35E+06,1.64E+06,1.99E+06,2.41E+06,2.92E+06,3.59E+06,4.36E+06,5.28E+06,6.41E+06,7.78E+06,9.54E+06,1.16E+07,1.40E+07,1.68E+07,2.02E+07,2.53E+07,3.03E+07,3.70E+07]
A23_4 = [107818,108523,108334,108076,109130,109278,108259,109579,109200,109723,109063,109488,109638,109822,109486,108982,110109,109288,110229,109972,110569,109923,110163,110962,110679,110077,109920,110934,110097,109718,109787,110559,111352,111570,111231,111737,111634,112446,112651,113591,114437,115133,116832,118058,119070,121631,123678,126514,130333,135975,143413,154084,166599,177357,183305,185327,185682,185703,185703,185703,185661,185703,185703,185703,185703,185703,187187,240351,290980,393177,815003,817361,817361,817361,897627,1.03E+06,1.25E+06,1.54E+06,1.87E+06,2.50E+06,2.71E+06,3.34E+06,4.19E+06,4.83E+06,5.87E+06,7.56E+06,8.61E+06,1.06E+07,1.30E+07,1.56E+07,1.89E+07,2.28E+07,2.80E+07,3.38E+07,4.10E+07]
A26_4 = [184630,184882,185051,184903,184967,185030,184840,185093,185009,184672,184861,184840,184903,184819,185156,185177,184945,185093,184861,184630,184988,185219,184924,185051,184882,185114,184967,185009,184903,185072,184840,184924,185072,185177,185198,185324,185093,185198,185240,185409,185409,185556,185493,185556,185682,185682,185661,185619,185703,185703,185703,185703,185703,185661,185703,185703,185703,185703,185703,185703,185703,185703,185703,185703,185855,232874,291085,451631,817361,817361,817361,817361,818372,1.03E+06,1.24E+06,1.45E+06,1.87E+06,2.50E+06,2.66E+06,3.13E+06,4.06E+06,4.50E+06,5.87E+06,6.71E+06,8.12E+06,9.77E+06,1.18E+07,1.44E+07,1.74E+07,2.11E+07,2.57E+07,3.09E+07,3.77E+07,4.57E+07,5.39E+07]
A31_4 = [176560,175771,175781,176360,175855,176476,175765,175250,176055,175818,175239,176186,176781,176402,175571,176118,175955,175902,175371,176444,175876,175671,175534,176160,175929,175839,176281,176129,176381,176834,177150,177497,177439,178166,177966,178803,179724,179813,181177,182145,182824,183598,184524,185035,185282,185514,185682,185703,185661,185703,185703,185703,185703,185703,185703,185703,185703,185703,185703,185703,185703,198516,334964,729687,817277,817361,817361,817361,817361,817445,1.03E+06,1.24E+06,1.45E+06,1.83E+06,2.50E+06,2.50E+06,3.13E+06,4.03E+06,4.40E+06,5.38E+06,6.48E+06,7.77E+06,9.45E+06,1.13E+07,1.37E+07,1.65E+07,1.99E+07,2.43E+07,2.92E+07,3.52E+07,4.25E+07,5.13E+07,5.39E+07,5.39E+07,5.39E+07]
A38_3 = [80437.8,80427.2,80427.2,80437.8,80427.2,80432.5,80427.2,80427.2,80427.2,80427.2,80427.2,80427.2,80448.3,80427.2,80427.2,80427.2,80427.2,80427.2,80427.2,80427.2,80427.2,80427.2,80469.3,80427.2,80427.2,80427.2,80427.2,80448.3,80427.2,80427.2,80427.2,80448.3,80427.2,80427.2,80427.2,80427.2,80427.2,80427.2,80427.2,80427.2,80427.2,80427.2,80427.2,80427.2,80427.2,80427.2,80427.2,80427.2,80432.5,80606.2,80500.9,86962.2,100930,134658,206875,314267,598786,817361,817277,817361,817361,817361,817361,817361,817361,922637,1.21E+06,1.33E+06,1.43E+06,1.76E+06,2.50E+06,2.61E+06,3.03E+06,4.19E+06,4.53E+06,5.58E+06,6.40E+06,7.67E+06,9.24E+06,1.11E+07,1.32E+07,1.60E+07,1.94E+07,2.32E+07,2.81E+07,3.34E+07,4.01E+07,4.87E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07]
A46_6 = [396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396214,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,505491,725307,817361,817361,817361,817361,817361,817361,817361,817361,1.24E+06,1.24E+06,1.24E+06,1.44E+06,2.08E+06,2.50E+06,2.64E+06,2.94E+06,3.77E+06,4.53E+06,5.16E+06,6.29E+06,7.56E+06,8.82E+06,1.05E+07,1.26E+07,1.47E+07,1.81E+07,2.15E+07,2.54E+07,3.01E+07,3.60E+07,4.36E+07,5.20E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07]
A54_3 = [396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396340,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396235,396256,396256,396256,396235,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,396256,427565,639234,817024,817361,817361,817361,817361,817361,817361,829847,1.03E+06,1.07E+06,1.24E+06,1.45E+06,1.45E+06,1.77E+06,2.24E+06,2.50E+06,2.92E+06,3.23E+06,4.19E+06,4.82E+06,5.87E+06,6.50E+06,7.98E+06,9.32E+06,1.11E+07,1.32E+07,1.59E+07,1.84E+07,2.22E+07,2.65E+07,3.16E+07,3.75E+07,4.45E+07,5.29E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07,5.39E+07]
A68_2 = [396761,396256,396635,396509,396340,396509,396509,396635,396424,396593,396256,396509,396551,396424,396424,396045,396509,396298,396382,396509,396424,396467,396298,396467,396214,396214,396593,396593,396256,396424,396214,396719,396298,396551,396509,396424,396467,396214,396172,396677,396130,396382,396340,396256,396382,396256,396256,396424,396214,396551,396382,396846,396635,396761,396846,396761,396930,397604,396930,397351,414363,813234,816940,816940,817235,817361,817361,817361,817361,817361,817361,817361,919647,1.03E+06,1.06E+06,1.24E+06,1.45E+06,1.45E+06,1.87E+06,2.32E+06,2.50E+06,2.92E+06,3.13E+06,3.99E+06,4.40E+06,4.93E+06,6.08E+06,7.13E+06,8.19E+06,9.45E+06,1.09E+07,1.26E+07,1.47E+07,1.68E+07,1.96E+07]
a22_6 = [x*1E-09 for x in A22_6]
a23_4 = [x*1E-09 for x in A23_4]
a26_4 = [x*1E-09 for x in A26_4]
a31_4 = [x*1E-09 for x in A31_4]
a38_3 = [x*1E-09 for x in A38_3]
a46_6 = [x*1E-09 for x in A46_6]
a54_3 = [x*1E-09 for x in A54_3]
a68_2 = [x*1E-09 for x in A68_2]

def getVlist(n):
    match(n):
        case 0:
            return V22_6,22.6
        case 1:
            return V23_4,23.4
        case 2:
            return V26_4,26.4
        case 3:
            return V31_4,31.4
        case 4:
            return V38_3,38.3
        case 5:
            return V46_6,46.6
        case 6:
            return V54_3,54.3
        case 7:
            return V68_2,68.2
        
def getAlist(n):
    match(n):
        case 0:
            return a22_6,22.6
        case 1:
            return a23_4,23.4
        case 2:
            return a26_4,26.4
        case 3:
            return a31_4,31.4
        case 4:
            return a38_3,38.3
        case 5:
            return a46_6,46.6
        case 6:
            return a54_3,54.3
        case 7:
            return a68_2,68.2

size = 8 

def pruneData(data):
    for i in range(len(data)-1):
        if ((data[i]) == 5.39E-02):
            print(i)
            return i
    return len(data)

Vpdata = [getVlist(i) for i in range(size)]
Apdata = [getAlist(i) for i in range(size)]

l = [pruneData(Apdata[i][0]) for i in range(size)]

Vdata = [(Vpdata[i][0][0:l[i]],Vpdata[i][1]) for i in range(size)]
Adata = [(Apdata[i][0][0:l[i]],Apdata[i][1]) for i in range(size)]

fitData = [curve_fit(transCurrent,Vdata[i][0],Adata[i][0]) for i in range(size)]

for i in range (size):
    print(f"At {Vdata[i][1]} C, V_T = {fitData[i][0][0]} with err: {np.sqrt(np.diag(fitData[i][1]))[0]}")
for i in range (size):
    print(f"At {Vdata[i][1]} C, I_S = {fitData[i][0][1]} with err: {np.sqrt(np.diag(fitData[i][1]))[1]}")
boltz = 0
boltzVar = 0
for i in range(size):
    boltz += fitData[i][0][0]*e/(Vdata[i][1]+273)
    boltzVar += (np.sqrt(np.diag(fitData[i][1]))[0]*e/(Vdata[i][1]+273))**2
boltzC = boltz/size
boltzErr = np.sqrt(boltzVar)

error = ((boltzC - k + boltzErr)*100/k,(boltzC - k - boltzErr)*100/k)
print(f"k = {boltzC} with err {boltzErr}")
print(f"We found a {error[0]}% error for the upper bound, and a {error[1]}% for the lower bound")
